version: 2.1
jobs:
  build:
    working_directory: ~/app
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{checksum "package.json"}}
            - dependency-cache-
      - run:
          name: Install dependencies
          command: yarn
      - save_cache:
          key: dependency-cache-{{checksum "package.json"}}
          paths:
            - node_modules
      - run:
          name: Build typescript
          command: yarn build
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - dist
  test:
    working_directory: ~/app
    docker:
      - image: circleci/node:10
      - image: mongo
      - image: rabbitmq:3.5.4
      - image: redis
    environment:
      api_version: /api/v1
      service_name: Enterscale
      mongodb_url: mongodb://localhost:27017/enterscale
      mongodb_username: username
      mongodb_password: some-password
      redis_url: redis://localhost:6379
      redis_password: some-password
      port: 8080
      node_env: dev
      expire_time: "3h"
      secret_key: some-32-character-secret-string-key
      amqp_url: //localhost:5672
      amqp_password: P7D6U5yGFtPHzMTtqcpfNhz7E-HGCIVz
      is_production: true
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Run tests
          command: yarn test
  deploy:
    working_directory: ~/app
    docker:
      - image: enterscale
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and push docker image
          command: |
            git config user.email $GITHUB_EMAIL
            git config user.name $GITHUB_USERNAME
      - add_ssh_keys:
          fingerprints:
            - $GITHUB_FINGERPRINT
      - run:
          name: Deploy to Azure Web App Using Azure Container Registry Task
          command: npm run deploy
workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - staging
                - master
      - test:
          context: enterscale
          requires:
            - build
          filters:
            branches:
              ignore:
                - staging
                - master
      - deploy:
          context: enterscale
          filters:
            branches:
              only:
                - staging
                - master
